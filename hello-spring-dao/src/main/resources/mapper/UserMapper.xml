<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inoriii.hello.spring.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.inoriii.hello.spring.model.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="enabled" jdbcType="BOOLEAN" property="enabled" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
    <resultMap id="FetchUserRoleVOMap" type="com.inoriii.hello.spring.api.vo.FetchUserRoleVO">
        <id column="id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <collection property="roleList"
                    ofType="com.inoriii.hello.spring.api.vo.FetchUserRoleVO$RoleVO">
            <result column="rid" jdbcType="INTEGER" property="roleId"/>
            <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        </collection>
        <collection property="permissionList"
                    ofType="com.inoriii.hello.spring.api.vo.FetchUserRoleVO$PermissionVO">
            <result column="pid" jdbcType="INTEGER" property="permissionId"/>
            <result column="permission_name" jdbcType="VARCHAR" property="permissionName"/>
        </collection>
    </resultMap>
  <sql id="Base_Column_List">
    id, username, `password`, enabled, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectFetchUserRoleVOByUsername" resultMap="FetchUserRoleVOMap">
        select u.id,
               u.username,
               u.password,
               r.id as rid,
               r.role_name,
               p.id as pid,
               p.permission_name
        from user u
                 left join user_role ur on u.id = ur.user_id
                 left join role r on ur.role_id = r.id
                 left join role_permission rp on r.id = rp.role_id
                 left join permission p on rp.permission_id = p.id
        where u.username = #{username,jdbcType=VARCHAR}
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.inoriii.hello.spring.model.entity.User" useGeneratedKeys="true">
    insert into user (username, `password`, enabled,
      create_time, update_time)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{enabled,jdbcType=BOOLEAN},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.inoriii.hello.spring.model.entity.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inoriii.hello.spring.model.entity.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inoriii.hello.spring.model.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BOOLEAN},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePasswordByUserName">
    update user
    set `password` = #{password,jdbcType=VARCHAR}
    where userName = #{username,jdbcType=VARCHAR}
  </update>
</mapper>